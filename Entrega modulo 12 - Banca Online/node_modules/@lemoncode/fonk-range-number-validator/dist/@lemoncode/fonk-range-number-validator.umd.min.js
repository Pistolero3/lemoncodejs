!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@lemoncode/fonk")):"function"==typeof define&&define.amd?define(["exports","@lemoncode/fonk"],n):n((e=e||self)["@lemoncode/fonk-range-number-validator"]={},e.Fonk)}(this,(function(e,n){"use strict";var t="The value must be between {{min.value}} and {{max.value}}",u={strictTypes:!1,min:{value:0,inclusive:!0},max:{value:100,inclusive:!0}},s=Object.freeze({__proto__:null,setErrorMessage:function(e){return t=e},setCustomArgs:function(e){return u=Object.assign(Object.assign({},u),e)},validator:function(e){var s=e.value,r=e.message,i=void 0===r?t:r,o=e.customArgs,a=void 0===o?u:o,c=Object.assign(Object.assign({},u),a),l=!function(e){return null!=e&&""!==e}(s)||function(e,n){return!n.strictTypes||"number"==typeof e}(s,c)&&function(e,n,t){return!isNaN(Number(e))&&((n.inclusive?e>=n.value:e>n.value)&&(t.inclusive?e<=t.value:e<t.value))}(s,c.min,c.max);return{succeeded:l,message:l?"":n.parseMessageWithCustomArgs(i,c),type:"RANGE_NUMBER"}}});e.rangeNumber=s,Object.defineProperty(e,"__esModule",{value:!0})}));
